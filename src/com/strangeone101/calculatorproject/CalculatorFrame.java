/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.strangeone101.calculatorproject;

import com.strangeone101.calculatorproject.components.MathButton;
import com.strangeone101.calculatorproject.components.NumberButton;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;

/**
 *
 * @author 92018134
 */
public class CalculatorFrame extends javax.swing.JFrame {
    private int decimalPlaces = 2;
    private boolean calculated = true; //Did the last calculation work?
    private JEditorPane pane;
    
    public static final char SUBTRACTION = '\u2012';// \u2012 is the other '-' symbol. 
    public static final String CALC_CHARS = "+*/%^" + SUBTRACTION; 

    /**
     * Creates new form CalculatorFrame
     */
    public CalculatorFrame() {
        initComponents();
        lblCalcTime.setText("");
        
        /**
         * The following code is for the "About" window. I'm doing it this way so I can have an HMTL link that functions
         */
        
        Font font = this.getFont();
        StringBuffer style = new StringBuffer("font-family:" + font.getFamily() + ";");
        
        style.append("font-weight: bold;");
        style.append("font-size:" + font.getSize() + "pt;");
        
        pane = new JEditorPane("text/html", "<HTML><BODY STYLE='" + style + "'>This calculator was designed by Toby Strange,<br>October 2017 at Computer Power Plus<br><br>"
                + "All the code can be found online at<br><a href='http://github.com/StrangeOne101/CalculatorProject'>"
                + "http://github.com/StrangeOne101/CalculatorProject</a></BODY></HTML>");
        
        pane.setBackground(this.getBackground());

        // handle link events
        pane.addHyperlinkListener(new HyperlinkListener()
        {
            @Override
            public void hyperlinkUpdate(HyperlinkEvent e)
            {
                if (!e.getEventType().equals(HyperlinkEvent.EventType.ACTIVATED)) return;
                
                Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
                if (desktop != null && desktop.isSupported(Desktop.Action.BROWSE)) {
                    try {
                        desktop.browse(e.getURL().toURI());
                    } catch (Exception e1) {
                        e1.printStackTrace();
                    }
                }         
            }
        });
        
        pane.setEditable(false);
        this.add(pane);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        btnGroup_Font = new javax.swing.ButtonGroup();
        btnGroup_View = new javax.swing.ButtonGroup();
        btnGroupTrigUnit = new javax.swing.ButtonGroup();
        txtCalculation = new javax.swing.JTextField();
        btnCalculate = new javax.swing.JButton();
        btn_2 = new NumberButton(this, "2");
        btn_3 = new NumberButton(this, "3");
        btn_4 = new NumberButton(this, "4");
        btn_5 = new NumberButton(this, "5");
        btn_6 = new NumberButton(this, "6");
        btn_7 = new NumberButton(this, "7");
        btn_8 = new NumberButton(this, "8");
        btn_9 = new NumberButton(this, "9");
        btn_decimal = new javax.swing.JButton();
        btn_0 = new NumberButton(this, "0");
        btn_1 = new NumberButton(this, "1");
        btn_multiply = new MathButton(EnumMathModifier.MULTIPLICATION, this);
        btn_divide = new MathButton(EnumMathModifier.DIVISION, this);
        btn_add = new MathButton(EnumMathModifier.ADDITION, this);
        btn_subtract = new MathButton(EnumMathModifier.SUBTRACTION, this);
        btn_exponent = new MathButton(EnumMathModifier.EXPONENT, this);
        btn_back = new javax.swing.JButton();
        btn_CA = new javax.swing.JButton();
        lblCalcTime = new javax.swing.JLabel();
        btn_RBracket = new javax.swing.JButton();
        btn_LBracket = new javax.swing.JButton();
        btn_CE = new javax.swing.JButton();
        radioDegrees = new javax.swing.JRadioButton();
        radioRadians = new javax.swing.JRadioButton();
        btn_blank2 = new javax.swing.JButton();
        btn_sin = new javax.swing.JButton();
        btn_cos = new javax.swing.JButton();
        btn_asin = new javax.swing.JButton();
        btn_acos = new javax.swing.JButton();
        btn_tan = new javax.swing.JButton();
        btn_atan = new javax.swing.JButton();
        btn_pi = new NumberButton(this, Math.PI + "");
        btn_e = new NumberButton(this, Math.E + "");
        btn_factorial = new javax.swing.JButton();
        btn_divBy1 = new javax.swing.JButton();
        btn_invert = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        radioBtn_View_Baisc = new javax.swing.JRadioButtonMenuItem();
        radioBtn_View_Extended = new javax.swing.JRadioButtonMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        chkboxEquationTime = new javax.swing.JCheckBoxMenuItem();
        radioBtn_Font_Plain = new javax.swing.JMenu();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        radioBtn_Font_Bold = new javax.swing.JRadioButtonMenuItem();
        jMenu4 = new javax.swing.JMenu();
        menuItemRound_enabled = new javax.swing.JCheckBoxMenuItem();
        menuItemRound_config = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        menuItemAbout = new javax.swing.JMenuItem();
        menuItemHotKeys = new javax.swing.JMenuItem();

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(299, 370));
        setResizable(false);
        getContentPane().setLayout(null);

        txtCalculation.setEditable(false);
        txtCalculation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCalculation.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCalculation.setText("0");
        txtCalculation.setName("txtCalculation"); // NOI18N
        getContentPane().add(txtCalculation);
        txtCalculation.setBounds(20, 20, 260, 30);

        btnCalculate.setText("=");
        btnCalculate.setPreferredSize(new java.awt.Dimension(42, 42));
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });
        getContentPane().add(btnCalculate);
        btnCalculate.setBounds(120, 220, 42, 42);
        btnCalculate.getAccessibleContext().setAccessibleDescription("");

        btn_2.setText("2");
        btn_2.setFocusTraversalPolicyProvider(true);
        btn_2.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_2);
        btn_2.setBounds(70, 170, 42, 42);

        btn_3.setText("3");
        btn_3.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_3);
        btn_3.setBounds(120, 170, 42, 42);

        btn_4.setText("4");
        btn_4.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_4);
        btn_4.setBounds(20, 120, 42, 42);

        btn_5.setText("5");
        btn_5.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_5);
        btn_5.setBounds(70, 120, 42, 42);

        btn_6.setText("6");
        btn_6.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_6);
        btn_6.setBounds(120, 120, 42, 42);

        btn_7.setText("7");
        btn_7.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_7);
        btn_7.setBounds(20, 70, 42, 42);

        btn_8.setText("8");
        btn_8.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_8);
        btn_8.setBounds(70, 70, 42, 42);

        btn_9.setText("9");
        btn_9.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_9);
        btn_9.setBounds(120, 70, 42, 42);

        btn_decimal.setText(".");
        btn_decimal.setPreferredSize(new java.awt.Dimension(42, 42));
        btn_decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_decimalActionPerformed(evt);
            }
        });
        getContentPane().add(btn_decimal);
        btn_decimal.setBounds(70, 220, 42, 42);

        btn_0.setText("0");
        btn_0.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_0);
        btn_0.setBounds(20, 220, 42, 42);

        btn_1.setText("1");
        btn_1.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_1);
        btn_1.setBounds(20, 170, 42, 42);

        btn_multiply.setText("*");
        btn_multiply.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_multiply);
        btn_multiply.setBounds(220, 170, 42, 42);

        btn_divide.setText("/");
        btn_divide.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_divide);
        btn_divide.setBounds(170, 170, 42, 42);

        btn_add.setText("+");
        btn_add.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_add);
        btn_add.setBounds(170, 220, 42, 42);

        btn_subtract.setText("\u2012");
        btn_subtract.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_subtract.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_subtract);
        btn_subtract.setBounds(220, 220, 42, 42);

        btn_exponent.setText("^");
        btn_exponent.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_exponent.setMargin(new java.awt.Insets(2, 5, 2, 5));
        btn_exponent.setPreferredSize(new java.awt.Dimension(42, 42));
        getContentPane().add(btn_exponent);
        btn_exponent.setBounds(170, 70, 42, 42);

        btn_back.setText("Del");
        btn_back.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_back.setIconTextGap(2);
        btn_back.setMargin(new java.awt.Insets(2, 5, 2, 5));
        btn_back.setPreferredSize(new java.awt.Dimension(42, 42));
        btn_back.setVerifyInputWhenFocusTarget(false);
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        getContentPane().add(btn_back);
        btn_back.setBounds(220, 70, 42, 42);

        btn_CA.setText("CA");
        btn_CA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CAActionPerformed(evt);
            }
        });
        getContentPane().add(btn_CA);
        btn_CA.setBounds(20, 270, 90, 40);

        lblCalcTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCalcTime.setText("0ms");
        getContentPane().add(lblCalcTime);
        lblCalcTime.setBounds(180, 50, 100, 20);

        btn_RBracket.setText(")");
        btn_RBracket.setPreferredSize(new java.awt.Dimension(42, 42));
        btn_RBracket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RBracketActionPerformed(evt);
            }
        });
        getContentPane().add(btn_RBracket);
        btn_RBracket.setBounds(220, 120, 42, 42);

        btn_LBracket.setText("(");
        btn_LBracket.setPreferredSize(new java.awt.Dimension(42, 42));
        btn_LBracket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LBracketActionPerformed(evt);
            }
        });
        getContentPane().add(btn_LBracket);
        btn_LBracket.setBounds(170, 120, 42, 42);

        btn_CE.setText("CE");
        btn_CE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CEActionPerformed(evt);
            }
        });
        getContentPane().add(btn_CE);
        btn_CE.setBounds(120, 270, 90, 40);

        btnGroupTrigUnit.add(radioDegrees);
        radioDegrees.setSelected(true);
        radioDegrees.setText("Degrees");
        getContentPane().add(radioDegrees);
        radioDegrees.setBounds(290, 20, 80, 23);

        btnGroupTrigUnit.add(radioRadians);
        radioRadians.setText("Radians");
        getContentPane().add(radioRadians);
        radioRadians.setBounds(370, 20, 90, 23);

        btn_blank2.setEnabled(false);
        btn_blank2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_blank2.setPreferredSize(new java.awt.Dimension(40, 40));
        getContentPane().add(btn_blank2);
        btn_blank2.setBounds(410, 220, 42, 42);

        btn_sin.setText("sin");
        btn_sin.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_sin.setPreferredSize(new java.awt.Dimension(40, 40));
        btn_sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sinActionPerformed(evt);
            }
        });
        getContentPane().add(btn_sin);
        btn_sin.setBounds(310, 70, 42, 42);

        btn_cos.setText("cos");
        btn_cos.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_cos.setPreferredSize(new java.awt.Dimension(40, 40));
        btn_cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cosActionPerformed(evt);
            }
        });
        getContentPane().add(btn_cos);
        btn_cos.setBounds(360, 70, 42, 42);

        btn_asin.setText("asin");
        btn_asin.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_asin.setPreferredSize(new java.awt.Dimension(40, 40));
        btn_asin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_asinActionPerformed(evt);
            }
        });
        getContentPane().add(btn_asin);
        btn_asin.setBounds(310, 120, 42, 42);

        btn_acos.setText("acos");
        btn_acos.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_acos.setPreferredSize(new java.awt.Dimension(40, 40));
        btn_acos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_acosActionPerformed(evt);
            }
        });
        getContentPane().add(btn_acos);
        btn_acos.setBounds(360, 120, 42, 42);

        btn_tan.setText("tan");
        btn_tan.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_tan.setPreferredSize(new java.awt.Dimension(40, 40));
        btn_tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tanActionPerformed(evt);
            }
        });
        getContentPane().add(btn_tan);
        btn_tan.setBounds(410, 70, 42, 42);

        btn_atan.setText("atan");
        btn_atan.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_atan.setPreferredSize(new java.awt.Dimension(40, 40));
        btn_atan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atanActionPerformed(evt);
            }
        });
        getContentPane().add(btn_atan);
        btn_atan.setBounds(410, 120, 42, 42);

        btn_pi.setText("PI");
        btn_pi.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_pi.setPreferredSize(new java.awt.Dimension(40, 40));
        getContentPane().add(btn_pi);
        btn_pi.setBounds(310, 220, 42, 42);

        btn_e.setText("E");
        btn_e.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_e.setPreferredSize(new java.awt.Dimension(40, 40));
        getContentPane().add(btn_e);
        btn_e.setBounds(360, 220, 42, 42);

        btn_factorial.setText("x!");
        btn_factorial.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_factorial.setPreferredSize(new java.awt.Dimension(40, 40));
        btn_factorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_factorialActionPerformed(evt);
            }
        });
        getContentPane().add(btn_factorial);
        btn_factorial.setBounds(310, 170, 42, 42);

        btn_divBy1.setText("1/x");
        btn_divBy1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_divBy1.setPreferredSize(new java.awt.Dimension(40, 40));
        btn_divBy1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_divBy1ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_divBy1);
        btn_divBy1.setBounds(360, 170, 42, 42);

        btn_invert.setText("-/+");
        btn_invert.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_invert.setPreferredSize(new java.awt.Dimension(40, 40));
        btn_invert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_invertActionPerformed(evt);
            }
        });
        getContentPane().add(btn_invert);
        btn_invert.setBounds(410, 170, 42, 42);

        jMenu2.setText("View");

        radioBtn_View_Baisc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, 0));
        btnGroup_View.add(radioBtn_View_Baisc);
        radioBtn_View_Baisc.setSelected(true);
        radioBtn_View_Baisc.setText("Basic");
        radioBtn_View_Baisc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_View_BaiscActionPerformed(evt);
            }
        });
        jMenu2.add(radioBtn_View_Baisc);

        radioBtn_View_Extended.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, 0));
        btnGroup_View.add(radioBtn_View_Extended);
        radioBtn_View_Extended.setText("Extended");
        radioBtn_View_Extended.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_View_ExtendedActionPerformed(evt);
            }
        });
        jMenu2.add(radioBtn_View_Extended);
        jMenu2.add(jSeparator1);

        chkboxEquationTime.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, 0));
        chkboxEquationTime.setText("Calculation Time");
        chkboxEquationTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkboxEquationTimeActionPerformed(evt);
            }
        });
        jMenu2.add(chkboxEquationTime);

        jMenuBar1.add(jMenu2);

        radioBtn_Font_Plain.setText("Font");

        jRadioButtonMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        btnGroup_Font.add(jRadioButtonMenuItem3);
        jRadioButtonMenuItem3.setSelected(true);
        jRadioButtonMenuItem3.setText("Plain");
        jRadioButtonMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem3ActionPerformed(evt);
            }
        });
        radioBtn_Font_Plain.add(jRadioButtonMenuItem3);

        radioBtn_Font_Bold.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        btnGroup_Font.add(radioBtn_Font_Bold);
        radioBtn_Font_Bold.setText("Bold");
        radioBtn_Font_Bold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_Font_BoldActionPerformed(evt);
            }
        });
        radioBtn_Font_Plain.add(radioBtn_Font_Bold);

        jMenuBar1.add(radioBtn_Font_Plain);

        jMenu4.setText("Round");

        menuItemRound_enabled.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuItemRound_enabled.setSelected(true);
        menuItemRound_enabled.setText("Enabled");
        menuItemRound_enabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemRound_enabledActionPerformed(evt);
            }
        });
        jMenu4.add(menuItemRound_enabled);

        menuItemRound_config.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        menuItemRound_config.setText("2 dpt (click to change)");
        menuItemRound_config.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemRound_configActionPerformed(evt);
            }
        });
        jMenu4.add(menuItemRound_config);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Help");

        menuItemAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, 0));
        menuItemAbout.setText("About");
        menuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAboutActionPerformed(evt);
            }
        });
        jMenu5.add(menuItemAbout);

        menuItemHotKeys.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, 0));
        menuItemHotKeys.setText("Hot Keys");
        menuItemHotKeys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemHotKeysActionPerformed(evt);
            }
        });
        jMenu5.add(menuItemHotKeys);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        try {
            calculated = false; //Set the calculated field back to false
            long time = System.nanoTime();
            double d = CalculatorUtil.calculate(getTxtCalculation().getText().replaceAll(" ", ""));
            double rounded = menuItemRound_enabled.isSelected() ? Math.round(d * (Math.pow(10, this.decimalPlaces))) / Math.pow(10, this.decimalPlaces) : d;
            long time2 = System.nanoTime();
            double totalTime = (time2 - time);
            totalTime /= 1000000;
            getTxtCalculation().setText(rounded + "");
            if (chkboxEquationTime.isSelected()) {
                lblCalcTime.setText(totalTime + "ms");
            }
            calculated = true; //If the calculation was successful, this will be set back to true. 
            update();
        } catch (ArithmeticException e) {
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException e) {
            if (e.getLocalizedMessage().startsWith("For input string:")) {
                JOptionPane.showMessageDialog(this, "Inputted number is too large! (Max is " + Double.MAX_VALUE + ")", "Error", JOptionPane.ERROR_MESSAGE);     
            } else if (e.getLocalizedMessage().startsWith("multiple points")) {
                JOptionPane.showMessageDialog(this, "Cannot have multiple decimal points!", "Error", JOptionPane.ERROR_MESSAGE); 
            } else if (e.getLocalizedMessage().equalsIgnoreCase("empty string")) {
                JOptionPane.showMessageDialog(this, "Incomplete equation!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, e.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
            e.printStackTrace();
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Malformed brackets!", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } 
        catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);    
        }
        
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void menuItemRound_enabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemRound_enabledActionPerformed
        menuItemRound_config.setEnabled(menuItemRound_enabled.isSelected());
    }//GEN-LAST:event_menuItemRound_enabledActionPerformed

    private void menuItemRound_configActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemRound_configActionPerformed
        String s = (String) JOptionPane.showInputDialog(this, "Set the decimal places to...?", "Decimal Places", JOptionPane.QUESTION_MESSAGE, null, null, this.decimalPlaces);
        if (!s.equals("")) {
            try {
                int d = Integer.parseInt(s);
                if (d > 9) d = 9;
                else if (d < 0) d = 0;
                this.decimalPlaces = d;
                this.menuItemRound_config.setText(d + " dpt...");
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Error: Decimal place must be a whole number!", "Error", JOptionPane.ERROR);
            }
        }
        
    }//GEN-LAST:event_menuItemRound_configActionPerformed

    private void btn_CAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CAActionPerformed
        txtCalculation.setText("0");
        txtCalculation.setForeground(Color.BLACK);
    }//GEN-LAST:event_btn_CAActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        String text = txtCalculation.getText();
        if (text.length() > 0) {
            int indexToCheck = text.length() -1;
            if (indexToCheck > 0 && text.charAt(indexToCheck) == ' ') indexToCheck--;
            if (indexToCheck > 1 && (CALC_CHARS + "()").contains(text.charAt(indexToCheck) + "") && text.charAt(indexToCheck - 1) == ' ') indexToCheck--;
            if (indexToCheck <= 0) {
                txtCalculation.setText("0");
            } else {

                txtCalculation.setText(text.substring(0, indexToCheck)); 
            }   
        }
    }//GEN-LAST:event_btn_backActionPerformed

    private void chkboxEquationTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkboxEquationTimeActionPerformed
        if (!chkboxEquationTime.isSelected()) {
            lblCalcTime.setText("");
        } else if (lblCalcTime.getText().equals("")) {
            lblCalcTime.setText("0ms");
        }
    }//GEN-LAST:event_chkboxEquationTimeActionPerformed

    private void btn_LBracketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LBracketActionPerformed
        String text = txtCalculation.getText();
        int index = text.length() - 1;
        if (index > 0 && text.charAt(index) == ' ') {
            text = text + "(";
        } else {
            text = text + " (";
        }
        txtCalculation.setText(text);
        update();
    }//GEN-LAST:event_btn_LBracketActionPerformed

    private void btn_RBracketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RBracketActionPerformed
         String text = txtCalculation.getText();
        int index = text.length() - 1;
        if (index > 0 && text.charAt(index) == ' ') index--;
        if (index > 0 && CalculatorFrame.CALC_CHARS.contains(text.charAt(index) + "")) {
            //text = text.substring(0, index) + ") ";
        } else {
            text = text + ") ";
        }
        txtCalculation.setText(text);
        update();
    }//GEN-LAST:event_btn_RBracketActionPerformed

    private void radioBtn_Font_BoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_Font_BoldActionPerformed
        Font font = txtCalculation.getFont();
       
        txtCalculation.setFont(font.deriveFont(Font.BOLD));
    }//GEN-LAST:event_radioBtn_Font_BoldActionPerformed

    private void jRadioButtonMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem3ActionPerformed
       Font font = txtCalculation.getFont();
       
        txtCalculation.setFont(font.deriveFont(Font.PLAIN));
    }//GEN-LAST:event_jRadioButtonMenuItem3ActionPerformed

    private void btn_decimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_decimalActionPerformed
        String text = txtCalculation.getText();
        int index = text.length() - 1;
        while (index > 0 && text.charAt(index) == ' ') {
            index--;
        }
        
        char lastChar = text.charAt(index);
        if (lastChar == '.' || (CALC_CHARS + "()").contains(lastChar + "")) {
            return;
        } else if (text.substring(CalculatorUtil.findDoubleLeft(text, index) ,index).contains(".")) return;
        
        txtCalculation.setText(text + ".");
    }//GEN-LAST:event_btn_decimalActionPerformed

    private void btn_CEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CEActionPerformed
        int index = CalculatorUtil.findDoubleLeft(txtCalculation.getText(), txtCalculation.getText().length());
        if (index != txtCalculation.getText().length()) {
            String text = txtCalculation.getText().substring(0, index);
            if (text.equals("")) {
                txtCalculation.setText("0");
            } else {
                txtCalculation.setText(text + " ");
            }
            
        }
        
    }//GEN-LAST:event_btn_CEActionPerformed

    private void radioBtn_View_BaiscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_View_BaiscActionPerformed
        this.setSize(240, this.getSize().height);
    }//GEN-LAST:event_radioBtn_View_BaiscActionPerformed

    private void radioBtn_View_ExtendedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_View_ExtendedActionPerformed
        this.setSize(475, this.getSize().height);
    }//GEN-LAST:event_radioBtn_View_ExtendedActionPerformed

    private void btn_factorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_factorialActionPerformed
        btnCalculateActionPerformed(evt);
        if (calculated) {
            if (txtCalculation.getText().contains(".") || Integer.parseInt(txtCalculation.getText()) > 20 || Integer.parseInt(txtCalculation.getText()) < 0) {
                JOptionPane.showMessageDialog(this, "Please provide a positive integer between 0 and 20!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int value = Integer.parseInt(txtCalculation.getText());
            int total = 1;
            for (int i = 1; i <= value; ++i) {
                total *= i;
            }
            txtCalculation.setText(total + "");
        }
    }//GEN-LAST:event_btn_factorialActionPerformed

    private void btn_divBy1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_divBy1ActionPerformed
        btnCalculateActionPerformed(evt);
        if (calculated) {
            double value = Double.parseDouble(txtCalculation.getText());
            if (value == 0) {
                JOptionPane.showMessageDialog(this, "Cannot divide by zero!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            txtCalculation.setText(1 / value + "");
            btnCalculateActionPerformed(evt);
        }
    }//GEN-LAST:event_btn_divBy1ActionPerformed

    private void btn_sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sinActionPerformed
        btnCalculateActionPerformed(evt);
        if (calculated) {
            double angle = Double.parseDouble(txtCalculation.getText());
            if (radioDegrees.isSelected()) {
                angle = Math.toRadians(angle);
            }
            txtCalculation.setText(Math.sin(angle) + "");
            btnCalculateActionPerformed(evt);
        }
    }//GEN-LAST:event_btn_sinActionPerformed

    private void btn_cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cosActionPerformed
        btnCalculateActionPerformed(evt);
        if (calculated) {
            double angle = Double.parseDouble(txtCalculation.getText());
            if (radioDegrees.isSelected()) {
                angle = Math.toRadians(angle);
            }
            txtCalculation.setText(Math.cos(angle) + "");
            btnCalculateActionPerformed(evt);
        }
    }//GEN-LAST:event_btn_cosActionPerformed

    private void btn_tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tanActionPerformed
        btnCalculateActionPerformed(evt);
        if (calculated) {
            double angle = Double.parseDouble(txtCalculation.getText());
            if (radioDegrees.isSelected()) {
                angle = Math.toRadians(angle);
            }
            txtCalculation.setText(Math.tan(angle) + "");
            btnCalculateActionPerformed(evt);
        }
    }//GEN-LAST:event_btn_tanActionPerformed

    private void btn_asinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_asinActionPerformed
        btnCalculateActionPerformed(evt);
        if (calculated) {
            double input = Double.parseDouble(txtCalculation.getText());
            double output = Math.asin(input);
            if (radioDegrees.isSelected()) {
                output = Math.toDegrees(output);
            }
            txtCalculation.setText(output + "");
            btnCalculateActionPerformed(evt);
        }
    }//GEN-LAST:event_btn_asinActionPerformed

    private void btn_acosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_acosActionPerformed
        btnCalculateActionPerformed(evt);
        if (calculated) {
            double input = Double.parseDouble(txtCalculation.getText());
            double output = Math.acos(input);
            if (radioDegrees.isSelected()) {
                output = Math.toDegrees(output);
            }
            txtCalculation.setText(output + "");
            btnCalculateActionPerformed(evt);
        }
    }//GEN-LAST:event_btn_acosActionPerformed

    private void btn_atanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_atanActionPerformed
        btnCalculateActionPerformed(evt);
        if (calculated) {
            double input = Double.parseDouble(txtCalculation.getText());
            double output = Math.atan(input);
            if (radioDegrees.isSelected()) {
                output = Math.toDegrees(output);
            }
            txtCalculation.setText(output + "");
            btnCalculateActionPerformed(evt);
        }
    }//GEN-LAST:event_btn_atanActionPerformed

    private void btn_invertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_invertActionPerformed
        int index = CalculatorUtil.findDoubleLeft(txtCalculation.getText(), txtCalculation.getText().length());
        if (index != -1 && index != txtCalculation.getText().length() && !CalculatorUtil.isOperatorLeft(txtCalculation.getText(), txtCalculation.getText().length())) {
            if (txtCalculation.getText().charAt(index) == ' ') index++;
            
            double d = Double.parseDouble(txtCalculation.getText().substring(index));
            d *= -1;
            txtCalculation.setText(CalculatorUtil.replaceBetween(txtCalculation.getText(), index, txtCalculation.getText().length(), d + ""));
            update();
        }
        
    }//GEN-LAST:event_btn_invertActionPerformed

    private void menuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAboutActionPerformed
        JOptionPane.showMessageDialog(this, pane, "About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_menuItemAboutActionPerformed

    private void menuItemHotKeysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemHotKeysActionPerformed
        JOptionPane.showMessageDialog(this, "A - About\nK - Hot Keys\nCtrl + P - Plain Font\nCtrl + B - Bold Font\nB - Basic View\nE - Extended View\nT - Calculation Time\nCtrl + R - Change roundings\nCtrl + Shift + R - Toggle Roundings", "About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_menuItemHotKeysActionPerformed


    public JTextField getTxtCalculation() {
        return txtCalculation;
    }
    
    public void update() {
        txtCalculation.setText(CalculatorUtil.eraseUnneededZeros(txtCalculation.getText()));
        
        
    }
    
    
    
    
   
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.ButtonGroup btnGroupTrigUnit;
    private javax.swing.ButtonGroup btnGroup_Font;
    private javax.swing.ButtonGroup btnGroup_View;
    private javax.swing.JButton btn_0;
    private javax.swing.JButton btn_1;
    private javax.swing.JButton btn_2;
    private javax.swing.JButton btn_3;
    private javax.swing.JButton btn_4;
    private javax.swing.JButton btn_5;
    private javax.swing.JButton btn_6;
    private javax.swing.JButton btn_7;
    private javax.swing.JButton btn_8;
    private javax.swing.JButton btn_9;
    private javax.swing.JButton btn_CA;
    private javax.swing.JButton btn_CE;
    private javax.swing.JButton btn_LBracket;
    private javax.swing.JButton btn_RBracket;
    private javax.swing.JButton btn_acos;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_asin;
    private javax.swing.JButton btn_atan;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_blank2;
    private javax.swing.JButton btn_cos;
    private javax.swing.JButton btn_decimal;
    private javax.swing.JButton btn_divBy1;
    private javax.swing.JButton btn_divide;
    private javax.swing.JButton btn_e;
    private javax.swing.JButton btn_exponent;
    private javax.swing.JButton btn_factorial;
    private javax.swing.JButton btn_invert;
    private javax.swing.JButton btn_multiply;
    private javax.swing.JButton btn_pi;
    private javax.swing.JButton btn_sin;
    private javax.swing.JButton btn_subtract;
    private javax.swing.JButton btn_tan;
    private javax.swing.JCheckBoxMenuItem chkboxEquationTime;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lblCalcTime;
    private javax.swing.JMenuItem menuItemAbout;
    private javax.swing.JMenuItem menuItemHotKeys;
    private javax.swing.JMenuItem menuItemRound_config;
    private javax.swing.JCheckBoxMenuItem menuItemRound_enabled;
    private javax.swing.JRadioButtonMenuItem radioBtn_Font_Bold;
    private javax.swing.JMenu radioBtn_Font_Plain;
    private javax.swing.JRadioButtonMenuItem radioBtn_View_Baisc;
    private javax.swing.JRadioButtonMenuItem radioBtn_View_Extended;
    private javax.swing.JRadioButton radioDegrees;
    private javax.swing.JRadioButton radioRadians;
    private javax.swing.JTextField txtCalculation;
    // End of variables declaration//GEN-END:variables
}
